{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/AccountCreation.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\n\ninterface AccountCreationProps {\n  onComplete: () => void\n}\n\ninterface FormData {\n  username: string\n  email: string\n}\n\nexport default function AccountCreation({ onComplete }: AccountCreationProps) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [showBonus, setShowBonus] = useState(false)\n  \n  const { register, handleSubmit, formState: { errors } } = useForm<FormData>()\n\n  const onSubmit = async (data: FormData) => {\n    setIsLoading(true)\n    \n    try {\n      // Simulate API call to create account\n      await new Promise(resolve => setTimeout(resolve, 1500))\n      \n      // Show signup bonus\n      setShowBonus(true)\n      \n      // Auto-proceed after showing bonus\n      setTimeout(() => {\n        onComplete()\n      }, 3000)\n    } catch (error) {\n      console.error('Account creation failed:', error)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (showBonus) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center p-4\">\n        <div className=\"max-w-md w-full bg-white rounded-lg shadow-xl p-8 text-center\">\n          <div className=\"mb-6\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <span className=\"text-2xl\">🎉</span>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Welcome Bonus!</h2>\n            <p className=\"text-gray-600 mb-6\">\n              Congratulations! You've received your starter bonus:\n            </p>\n          </div>\n          \n          <div className=\"space-y-3 mb-6\">\n            <div className=\"bg-blue-50 p-3 rounded-lg\">\n              <span className=\"font-semibold text-blue-800\">100 Energy Points</span>\n            </div>\n            <div className=\"bg-yellow-50 p-3 rounded-lg\">\n              <span className=\"font-semibold text-yellow-800\">10 Bock Balls</span>\n            </div>\n          </div>\n          \n          <p className=\"text-sm text-gray-500\">\n            Proceeding to rooster selection...\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center p-4\">\n      <div className=\"max-w-md w-full bg-white rounded-lg shadow-xl p-8\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-3xl font-bold text-gray-800 mb-2\">Create Your Account</h2>\n          <p className=\"text-gray-600\">\n            Join the Rooster Battle arena and start your journey!\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n          <div>\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Username\n            </label>\n            <input\n              {...register('username', { \n                required: 'Username is required',\n                minLength: { value: 3, message: 'Username must be at least 3 characters' }\n              })}\n              type=\"text\"\n              id=\"username\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter your username\"\n            />\n            {errors.username && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.username.message}</p>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Email\n            </label>\n            <input\n              {...register('email', { \n                required: 'Email is required',\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: 'Invalid email address'\n                }\n              })}\n              type=\"email\"\n              id=\"email\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter your email\"\n            />\n            {errors.email && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n            )}\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-semibold py-3 px-6 rounded-lg transition-colors\"\n          >\n            {isLoading ? 'Creating Account...' : 'Create Account'}\n          </button>\n        </form>\n\n        <div className=\"mt-6 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            By creating an account, you agree to our terms of service and privacy policy.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAce,SAAS,gBAAgB,EAAE,UAAU,EAAwB;;IAC1E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD;IAEhE,MAAM,WAAW,OAAO;QACtB,aAAa;QAEb,IAAI;YACF,sCAAsC;YACtC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;YAEjD,oBAAoB;YACpB,aAAa;YAEb,mCAAmC;YACnC,WAAW;gBACT;YACF,GAAG;QACL,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C,SAAU;YACR,aAAa;QACf;IACF;IAEA,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAK,WAAU;8CAAW;;;;;;;;;;;0CAE7B,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,6LAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;kCAKpC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAK,WAAU;8CAA8B;;;;;;;;;;;0CAEhD,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAK,WAAU;8CAAgC;;;;;;;;;;;;;;;;;kCAIpD,6LAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAM7C;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,6LAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;8BAK/B,6LAAC;oBAAK,UAAU,aAAa;oBAAW,WAAU;;sCAChD,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAW,WAAU;8CAA+C;;;;;;8CAGnF,6LAAC;oCACE,GAAG,SAAS,YAAY;wCACvB,UAAU;wCACV,WAAW;4CAAE,OAAO;4CAAG,SAAS;wCAAyC;oCAC3E,EAAE;oCACF,MAAK;oCACL,IAAG;oCACH,WAAU;oCACV,aAAY;;;;;;gCAEb,OAAO,QAAQ,kBACd,6LAAC;oCAAE,WAAU;8CAA6B,OAAO,QAAQ,CAAC,OAAO;;;;;;;;;;;;sCAIrE,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAQ,WAAU;8CAA+C;;;;;;8CAGhF,6LAAC;oCACE,GAAG,SAAS,SAAS;wCACpB,UAAU;wCACV,SAAS;4CACP,OAAO;4CACP,SAAS;wCACX;oCACF,EAAE;oCACF,MAAK;oCACL,IAAG;oCACH,WAAU;oCACV,aAAY;;;;;;gCAEb,OAAO,KAAK,kBACX,6LAAC;oCAAE,WAAU;8CAA6B,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;sCAIlE,6LAAC;4BACC,MAAK;4BACL,UAAU;4BACV,WAAU;sCAET,YAAY,wBAAwB;;;;;;;;;;;;8BAIzC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;;;;;;AAO/C;GA/HwB;;QAIoC,iKAAA,CAAA,UAAO;;;KAJ3C","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/RoosterSelection.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\n\ninterface RoosterSelectionProps {\n  onSelection: (roosterType: string) => void\n}\n\ninterface Rooster {\n  id: string\n  name: string\n  type: string\n  description: string\n  color: string\n  stats: {\n    strength: number\n    speed: number\n    stamina: number\n    defense: number\n    intelligence: number\n  }\n}\n\nconst starterRoosters: Rooster[] = [\n  {\n    id: 'embawk',\n    name: 'Embawk',\n    type: 'Fire',\n    description: 'A fierce fire-type rooster with blazing attacks and high strength.',\n    color: 'bg-red-500',\n    stats: { strength: 85, speed: 70, stamina: 75, defense: 65, intelligence: 70 }\n  },\n  {\n    id: 'boltick',\n    name: 'Boltick',\n    type: 'Electric',\n    description: 'Lightning-fast electric rooster with shocking speed and intelligence.',\n    color: 'bg-yellow-500',\n    stats: { strength: 70, speed: 90, stamina: 65, defense: 60, intelligence: 85 }\n  },\n  {\n    id: 'dripple',\n    name: 'Dripple',\n    type: 'Water',\n    description: 'Calm water-type rooster with excellent defense and stamina.',\n    color: 'bg-blue-500',\n    stats: { strength: 65, speed: 60, stamina: 90, defense: 85, intelligence: 75 }\n  },\n  {\n    id: 'sproutchick',\n    name: 'Sproutchick',\n    type: 'Nature',\n    description: 'Nature-loving rooster with balanced stats and healing abilities.',\n    color: 'bg-green-500',\n    stats: { strength: 75, speed: 75, stamina: 80, defense: 75, intelligence: 80 }\n  }\n]\n\nexport default function RoosterSelection({ onSelection }: RoosterSelectionProps) {\n  const [selectedRooster, setSelectedRooster] = useState<string | null>(null)\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  const handleSelection = (roosterId: string) => {\n    setSelectedRooster(roosterId)\n    setShowConfirmation(true)\n  }\n\n  const confirmSelection = () => {\n    if (selectedRooster) {\n      const rooster = starterRoosters.find(r => r.id === selectedRooster)\n      onSelection(rooster?.name || selectedRooster)\n    }\n  }\n\n  const selectedRoosterData = starterRoosters.find(r => r.id === selectedRooster)\n\n  if (showConfirmation && selectedRoosterData) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center p-4\">\n        <div className=\"max-w-md w-full bg-white rounded-lg shadow-xl p-8\">\n          <div className=\"text-center mb-6\">\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Confirm Your Choice</h2>\n            <p className=\"text-gray-600\">\n              Are you sure you want to choose {selectedRoosterData.name}?\n            </p>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-lg p-6 mb-6\">\n            <div className=\"flex items-center mb-4\">\n              <div className={`w-16 h-16 ${selectedRoosterData.color} rounded-full flex items-center justify-center mr-4`}>\n                <span className=\"text-2xl text-white font-bold\">\n                  {selectedRoosterData.name.charAt(0)}\n                </span>\n              </div>\n              <div>\n                <h3 className=\"text-xl font-semibold text-gray-800\">{selectedRoosterData.name}</h3>\n                <p className=\"text-sm text-gray-600\">{selectedRoosterData.type} Type</p>\n              </div>\n            </div>\n            \n            <p className=\"text-gray-700 mb-4\">{selectedRoosterData.description}</p>\n            \n            <div className=\"grid grid-cols-2 gap-2 text-sm\">\n              <div className=\"flex justify-between\">\n                <span>Strength:</span>\n                <span className=\"font-semibold\">{selectedRoosterData.stats.strength}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Speed:</span>\n                <span className=\"font-semibold\">{selectedRoosterData.stats.speed}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Stamina:</span>\n                <span className=\"font-semibold\">{selectedRoosterData.stats.stamina}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Defense:</span>\n                <span className=\"font-semibold\">{selectedRoosterData.stats.defense}</span>\n              </div>\n              <div className=\"flex justify-between col-span-2\">\n                <span>Intelligence:</span>\n                <span className=\"font-semibold\">{selectedRoosterData.stats.intelligence}</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex gap-3\">\n            <button\n              onClick={() => setShowConfirmation(false)}\n              className=\"flex-1 bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded-lg\"\n            >\n              Go Back\n            </button>\n            <button\n              onClick={confirmSelection}\n              className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg\"\n            >\n              Confirm\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-4xl font-bold text-white mb-4\">Choose Your Starter Rooster</h2>\n          <p className=\"text-gray-300 text-lg\">\n            Select one of these four legendary roosters to begin your journey\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {starterRoosters.map((rooster) => (\n            <div\n              key={rooster.id}\n              className=\"bg-white rounded-lg shadow-xl p-6 hover:shadow-2xl transition-shadow cursor-pointer transform hover:scale-105 transition-transform\"\n              onClick={() => handleSelection(rooster.id)}\n            >\n              <div className=\"flex items-center mb-4\">\n                <div className={`w-20 h-20 ${rooster.color} rounded-full flex items-center justify-center mr-4`}>\n                  <span className=\"text-3xl text-white font-bold\">\n                    {rooster.name.charAt(0)}\n                  </span>\n                </div>\n                <div>\n                  <h3 className=\"text-2xl font-bold text-gray-800\">{rooster.name}</h3>\n                  <p className=\"text-lg text-gray-600\">{rooster.type} Type</p>\n                </div>\n              </div>\n              \n              <p className=\"text-gray-700 mb-4\">{rooster.description}</p>\n              \n              <div className=\"space-y-2\">\n                <h4 className=\"font-semibold text-gray-800 mb-2\">Base Stats:</h4>\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Strength:</span>\n                    <span className=\"font-semibold\">{rooster.stats.strength}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Speed:</span>\n                    <span className=\"font-semibold\">{rooster.stats.speed}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Stamina:</span>\n                    <span className=\"font-semibold\">{rooster.stats.stamina}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Defense:</span>\n                    <span className=\"font-semibold\">{rooster.stats.defense}</span>\n                  </div>\n                  <div className=\"flex justify-between col-span-2\">\n                    <span>Intelligence:</span>\n                    <span className=\"font-semibold\">{rooster.stats.intelligence}</span>\n                  </div>\n                </div>\n              </div>\n              \n              <button className=\"w-full mt-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition-colors\">\n                Choose {rooster.name}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/WagerMatchModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\n\ninterface WagerData {\n  token: string\n  amount: string\n}\n\ninterface WagerMatchModalProps {\n  onClose: () => void\n  onConfirm: (wagerData: WagerData) => void\n}\n\nconst supportedTokens = [\n  { symbol: 'USDC', name: 'USD Coin', address: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913' },\n  { symbol: 'ETH', name: 'Ethereum', address: '0x0000000000000000000000000000000000000000' },\n  { symbol: 'WETH', name: 'Wrapped Ethereum', address: '0x4200000000000000000000000000000000000006' },\n]\n\nexport default function WagerMatchModal({ onClose, onConfirm }: WagerMatchModalProps) {\n  const [isLoading, setIsLoading] = useState(false)\n  const { register, handleSubmit, watch, formState: { errors } } = useForm<WagerData>()\n\n  const selectedToken = watch('token')\n  const amount = watch('amount')\n\n  const onSubmit = async (data: WagerData) => {\n    setIsLoading(true)\n    \n    try {\n      // Simulate wallet interaction\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      onConfirm(data)\n    } catch (error) {\n      console.error('Wager creation failed:', error)\n      alert('Failed to create wager match. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold text-gray-800\">Create Wager Match</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 text-2xl\"\n          >\n            ×\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\n          <div>\n            <label htmlFor=\"token\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Select Token\n            </label>\n            <select\n              {...register('token', { required: 'Please select a token' })}\n              id=\"token\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">Choose a token...</option>\n              {supportedTokens.map((token) => (\n                <option key={token.symbol} value={token.symbol}>\n                  {token.symbol} - {token.name}\n                </option>\n              ))}\n            </select>\n            {errors.token && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.token.message}</p>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"amount\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Wager Amount\n            </label>\n            <input\n              {...register('amount', { \n                required: 'Please enter an amount',\n                pattern: {\n                  value: /^\\d+(\\.\\d+)?$/,\n                  message: 'Please enter a valid number'\n                },\n                min: {\n                  value: 0.001,\n                  message: 'Minimum wager is 0.001'\n                }\n              })}\n              type=\"number\"\n              step=\"0.001\"\n              id=\"amount\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"0.00\"\n            />\n            {errors.amount && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.amount.message}</p>\n            )}\n          </div>\n\n          {selectedToken && amount && (\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold text-blue-800 mb-2\">Wager Summary</h3>\n              <div className=\"space-y-1 text-sm text-blue-700\">\n                <p>Token: {selectedToken}</p>\n                <p>Amount: {amount} {selectedToken}</p>\n                <p className=\"text-xs text-blue-600 mt-2\">\n                  * Winner receives 98% of the total prize pool (both wagers)\n                </p>\n                <p className=\"text-xs text-blue-600\">\n                  * 2% platform fee applies\n                </p>\n              </div>\n            </div>\n          )}\n\n          <div className=\"bg-yellow-50 p-4 rounded-lg\">\n            <div className=\"flex items-start\">\n              <span className=\"text-yellow-600 mr-2\">⚠️</span>\n              <div className=\"text-sm text-yellow-800\">\n                <p className=\"font-semibold mb-1\">Important:</p>\n                <ul className=\"space-y-1 text-xs\">\n                  <li>• Your tokens will be locked until the match is complete</li>\n                  <li>• Both players must approve the wager before battle starts</li>\n                  <li>• Winner takes 98% of the total prize pool</li>\n                  <li>• Make sure you have sufficient balance in your wallet</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex gap-3\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"flex-1 bg-gray-500 hover:bg-gray-600 text-white font-semibold py-2 px-4 rounded-lg\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"flex-1 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-semibold py-2 px-4 rounded-lg\"\n            >\n              {isLoading ? 'Creating...' : 'Create Wager'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1357, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BattleFinder.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useAccount } from 'wagmi'\nimport WagerMatchModal from './WagerMatchModal'\n\ninterface BattleFinderProps {\n  onBack: () => void\n}\n\ninterface BattleRoom {\n  id: string\n  player: string\n  rooster: string\n  wager?: {\n    token: string\n    amount: string\n  }\n  isWager: boolean\n}\n\nconst mockBattleRooms: BattleRoom[] = [\n  {\n    id: '1',\n    player: 'DragonMaster',\n    rooster: 'Embawk',\n    isWager: false\n  },\n  {\n    id: '2',\n    player: 'ThunderBird',\n    rooster: 'Boltick',\n    wager: { token: 'USDC', amount: '10' },\n    isWager: true\n  },\n  {\n    id: '3',\n    player: 'AquaChamp',\n    rooster: 'Dripple',\n    isWager: false\n  },\n  {\n    id: '4',\n    player: 'NatureKing',\n    rooster: 'Sproutchick',\n    wager: { token: 'ETH', amount: '0.01' },\n    isWager: true\n  }\n]\n\nexport default function BattleFinder({ onBack }: BattleFinderProps) {\n  const [activeTab, setActiveTab] = useState<'casual' | 'wager'>('casual')\n  const [showWagerModal, setShowWagerModal] = useState(false)\n  const [isSearching, setIsSearching] = useState(false)\n  const { isConnected } = useAccount()\n\n  const casualRooms = mockBattleRooms.filter(room => !room.isWager)\n  const wagerRooms = mockBattleRooms.filter(room => room.isWager)\n\n  const handleQuickMatch = () => {\n    setIsSearching(true)\n    // Simulate matchmaking\n    setTimeout(() => {\n      setIsSearching(false)\n      alert('Match found! Starting battle...')\n    }, 3000)\n  }\n\n  const handleJoinRoom = (roomId: string) => {\n    alert(`Joining room ${roomId}...`)\n  }\n\n  const handleCreateWager = () => {\n    if (!isConnected) {\n      alert('Please connect your wallet to create wager matches')\n      return\n    }\n    setShowWagerModal(true)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-xl p-6 mb-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h1 className=\"text-3xl font-bold text-gray-800\">Battle Arena</h1>\n            <button\n              onClick={onBack}\n              className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg\"\n            >\n              Back to Menu\n            </button>\n          </div>\n\n          {/* Tab Navigation */}\n          <div className=\"flex mb-6 border-b\">\n            <button\n              onClick={() => setActiveTab('casual')}\n              className={`px-6 py-3 font-semibold ${\n                activeTab === 'casual'\n                  ? 'text-blue-600 border-b-2 border-blue-600'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              Casual Battles\n            </button>\n            <button\n              onClick={() => setActiveTab('wager')}\n              className={`px-6 py-3 font-semibold ${\n                activeTab === 'wager'\n                  ? 'text-blue-600 border-b-2 border-blue-600'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              Wager Matches\n            </button>\n          </div>\n\n          {/* Quick Match Section */}\n          <div className=\"bg-gray-50 rounded-lg p-6 mb-6\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Quick Match</h2>\n            <p className=\"text-gray-600 mb-4\">\n              Find a random opponent for a {activeTab} battle\n            </p>\n            <button\n              onClick={handleQuickMatch}\n              disabled={isSearching}\n              className=\"bg-green-600 hover:bg-green-700 disabled:bg-green-400 text-white font-semibold py-3 px-6 rounded-lg\"\n            >\n              {isSearching ? 'Searching for opponent...' : 'Find Quick Match'}\n            </button>\n          </div>\n\n          {/* Battle Rooms */}\n          <div>\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-gray-800\">\n                {activeTab === 'casual' ? 'Casual Battle Rooms' : 'Wager Match Rooms'}\n              </h2>\n              {activeTab === 'wager' && (\n                <button\n                  onClick={handleCreateWager}\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg\"\n                >\n                  Create Wager Match\n                </button>\n              )}\n            </div>\n\n            <div className=\"space-y-3\">\n              {(activeTab === 'casual' ? casualRooms : wagerRooms).map((room) => (\n                <div\n                  key={room.id}\n                  className=\"bg-gray-50 rounded-lg p-4 flex items-center justify-between hover:bg-gray-100 transition-colors\"\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center\">\n                      <span className=\"text-white font-bold\">\n                        {room.player.charAt(0)}\n                      </span>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-800\">{room.player}</h3>\n                      <p className=\"text-sm text-gray-600\">Rooster: {room.rooster}</p>\n                      {room.wager && (\n                        <p className=\"text-sm text-green-600 font-semibold\">\n                          Wager: {room.wager.amount} {room.wager.token}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => handleJoinRoom(room.id)}\n                    className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg\"\n                  >\n                    Challenge\n                  </button>\n                </div>\n              ))}\n            </div>\n\n            {(activeTab === 'casual' ? casualRooms : wagerRooms).length === 0 && (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-500\">\n                  No {activeTab} battles available right now. Try quick match or check back later!\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {showWagerModal && (\n        <WagerMatchModal\n          onClose={() => setShowWagerModal(false)}\n          onConfirm={(wagerData) => {\n            console.log('Creating wager match:', wagerData)\n            setShowWagerModal(false)\n            alert('Wager match created! Waiting for opponent...')\n          }}\n        />\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1719, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/Training.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\n\ninterface TrainingProps {\n  onBack: () => void\n}\n\ninterface RoosterStats {\n  strength: number\n  speed: number\n  stamina: number\n  defense: number\n  intelligence: number\n  level: number\n}\n\ninterface PlayerData {\n  energy: number\n  rooster: {\n    name: string\n    type: string\n    stats: RoosterStats\n  }\n}\n\nexport default function Training({ onBack }: TrainingProps) {\n  const [playerData, setPlayerData] = useState<PlayerData>({\n    energy: 85,\n    rooster: {\n      name: 'Embawk',\n      type: 'Fire',\n      stats: {\n        strength: 85,\n        speed: 70,\n        stamina: 75,\n        defense: 65,\n        intelligence: 70,\n        level: 1\n      }\n    }\n  })\n\n  const [isTraining, setIsTraining] = useState(false)\n  const [trainingResult, setTrainingResult] = useState<string | null>(null)\n\n  const energyCost = 10\n  const canTrain = playerData.energy >= energyCost\n\n  const trainStat = async (statName: keyof Omit<RoosterStats, 'level'>) => {\n    if (!canTrain) return\n\n    setIsTraining(true)\n    setTrainingResult(null)\n\n    try {\n      // Simulate training time\n      await new Promise(resolve => setTimeout(resolve, 2000))\n\n      // Calculate stat increase (1-3 points)\n      const increase = Math.floor(Math.random() * 3) + 1\n      const newStats = {\n        ...playerData.rooster.stats,\n        [statName]: playerData.rooster.stats[statName] + increase\n      }\n\n      // Check if level should increase (every 50 total stat points)\n      const oldTotal = Object.values(playerData.rooster.stats).reduce((sum, val) => sum + val, 0) - playerData.rooster.stats.level\n      const newTotal = Object.values(newStats).reduce((sum, val) => sum + val, 0) - newStats.level\n      \n      if (Math.floor(newTotal / 50) > Math.floor(oldTotal / 50)) {\n        newStats.level += 1\n        setTrainingResult(`${statName.charAt(0).toUpperCase() + statName.slice(1)} increased by ${increase}! Level up! Now level ${newStats.level}!`)\n      } else {\n        setTrainingResult(`${statName.charAt(0).toUpperCase() + statName.slice(1)} increased by ${increase}!`)\n      }\n\n      setPlayerData(prev => ({\n        ...prev,\n        energy: prev.energy - energyCost,\n        rooster: {\n          ...prev.rooster,\n          stats: newStats\n        }\n      }))\n\n    } catch (error) {\n      console.error('Training failed:', error)\n      setTrainingResult('Training failed. Please try again.')\n    } finally {\n      setIsTraining(false)\n    }\n  }\n\n  const getStatColor = (statName: string) => {\n    switch (statName) {\n      case 'strength': return 'bg-red-500'\n      case 'speed': return 'bg-yellow-500'\n      case 'stamina': return 'bg-green-500'\n      case 'defense': return 'bg-blue-500'\n      case 'intelligence': return 'bg-purple-500'\n      default: return 'bg-gray-500'\n    }\n  }\n\n  const getStatDescription = (statName: string) => {\n    switch (statName) {\n      case 'strength': return 'Increases physical attack damage'\n      case 'speed': return 'Determines turn order and evasion'\n      case 'stamina': return 'Increases maximum HP'\n      case 'defense': return 'Reduces incoming damage'\n      case 'intelligence': return 'Improves status effect accuracy'\n      default: return ''\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-xl p-6 mb-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h1 className=\"text-3xl font-bold text-gray-800\">Training Ground</h1>\n            <button\n              onClick={onBack}\n              className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg\"\n            >\n              Back to Menu\n            </button>\n          </div>\n\n          {/* Energy Display */}\n          <div className=\"bg-blue-50 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-lg font-semibold text-blue-800\">Energy</h2>\n                <p className=\"text-sm text-blue-600\">Required for training: {energyCost} energy per session</p>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-2xl font-bold text-blue-800\">{playerData.energy}</div>\n                <div className=\"text-sm text-blue-600\">Available</div>\n              </div>\n            </div>\n            <div className=\"mt-2 bg-blue-200 rounded-full h-2\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${Math.min(playerData.energy, 100)}%` }}\n              />\n            </div>\n          </div>\n\n          {/* Rooster Info */}\n          <div className=\"bg-gray-50 rounded-lg p-6 mb-6\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"w-16 h-16 bg-red-500 rounded-full flex items-center justify-center mr-4\">\n                <span className=\"text-2xl text-white font-bold\">\n                  {playerData.rooster.name.charAt(0)}\n                </span>\n              </div>\n              <div>\n                <h2 className=\"text-2xl font-bold text-gray-800\">{playerData.rooster.name}</h2>\n                <p className=\"text-gray-600\">{playerData.rooster.type} Type • Level {playerData.rooster.stats.level}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Training Result */}\n          {trainingResult && (\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\n              <p className=\"text-green-800 font-semibold\">{trainingResult}</p>\n            </div>\n          )}\n\n          {/* Training Options */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {Object.entries(playerData.rooster.stats).map(([statName, statValue]) => {\n              if (statName === 'level') return null\n              \n              return (\n                <div key={statName} className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <div className={`w-8 h-8 ${getStatColor(statName)} rounded-full flex items-center justify-center mr-3`}>\n                      <span className=\"text-white text-sm font-bold\">\n                        {statName.charAt(0).toUpperCase()}\n                      </span>\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-800 capitalize\">{statName}</h3>\n                      <p className=\"text-2xl font-bold text-gray-900\">{statValue}</p>\n                    </div>\n                  </div>\n                  \n                  <p className=\"text-xs text-gray-600 mb-4\">\n                    {getStatDescription(statName)}\n                  </p>\n                  \n                  <button\n                    onClick={() => trainStat(statName as keyof Omit<RoosterStats, 'level'>)}\n                    disabled={!canTrain || isTraining}\n                    className={`w-full py-2 px-4 rounded-lg font-semibold transition-colors ${\n                      canTrain && !isTraining\n                        ? `${getStatColor(statName)} hover:opacity-80 text-white`\n                        : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                    }`}\n                  >\n                    {isTraining ? 'Training...' : `Train ${statName.charAt(0).toUpperCase() + statName.slice(1)}`}\n                  </button>\n                </div>\n              )\n            })}\n          </div>\n\n          {!canTrain && (\n            <div className=\"mt-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n              <p className=\"text-yellow-800\">\n                <span className=\"font-semibold\">Not enough energy!</span> You need at least {energyCost} energy to train. \n                Energy regenerates over time or can be purchased.\n              </p>\n            </div>\n          )}\n\n          {/* Training Tips */}\n          <div className=\"mt-6 bg-gray-50 rounded-lg p-4\">\n            <h3 className=\"font-semibold text-gray-800 mb-2\">Training Tips</h3>\n            <ul className=\"text-sm text-gray-600 space-y-1\">\n              <li>• Each training session costs {energyCost} energy and increases a stat by 1-3 points</li>\n              <li>• Your rooster levels up every 50 total stat points gained</li>\n              <li>• Higher level roosters perform better in battles</li>\n              <li>• Energy regenerates slowly over time</li>\n              <li>• Focus on training stats that complement your rooster's type</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2220, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/PhaserGameNew.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useRef } from 'react'\n\nexport default function PhaserGame() {\n  const gameRef = useRef<HTMLDivElement>(null)\n  const phaserGameRef = useRef<any>(null)\n\n  useEffect(() => {\n    if (!gameRef.current || phaserGameRef.current || typeof window === 'undefined') return\n\n    // Dynamic import of Phaser to avoid SSR issues\n    import('phaser').then((Phaser) => {\n      // Phaser game configuration\n      const config: Phaser.Types.Core.GameConfig = {\n        type: Phaser.AUTO,\n        width: 800,\n        height: 600,\n        parent: gameRef.current!,\n        backgroundColor: '#2c3e50',\n        scene: {\n          preload: function(this: Phaser.Scene) {\n            // Create placeholder graphics for roosters\n            this.add.graphics()\n              .fillStyle(0xff0000)\n              .fillRect(0, 0, 64, 64)\n              .generateTexture('player-rooster', 64, 64)\n\n            this.add.graphics()\n              .fillStyle(0x0000ff)\n              .fillRect(0, 0, 64, 64)\n              .generateTexture('enemy-rooster', 64, 64)\n\n            // Create UI elements\n            this.add.graphics()\n              .fillStyle(0x00ff00)\n              .fillRect(0, 0, 200, 20)\n              .generateTexture('hp-bar-bg', 200, 20)\n\n            this.add.graphics()\n              .fillStyle(0xff0000)\n              .fillRect(0, 0, 200, 20)\n              .generateTexture('hp-bar-fill', 200, 20)\n          },\n          create: function(this: Phaser.Scene) {\n            // Battle background\n            this.add.rectangle(400, 300, 800, 600, 0x87CEEB)\n            \n            // Ground\n            this.add.rectangle(400, 550, 800, 100, 0x90EE90)\n            \n            // Player rooster (left side)\n            const playerRooster = this.add.image(200, 400, 'player-rooster')\n            playerRooster.setScale(1.5)\n            \n            // Enemy rooster (right side)\n            const enemyRooster = this.add.image(600, 400, 'enemy-rooster')\n            enemyRooster.setScale(1.5)\n            enemyRooster.setFlipX(true)\n\n            // Player HP bar\n            this.add.text(50, 50, 'Embawk', { fontSize: '18px', color: '#000' })\n            const playerHpBg = this.add.image(150, 70, 'hp-bar-bg')\n            playerHpBg.setOrigin(0, 0.5)\n            const playerHpFill = this.add.image(150, 70, 'hp-bar-fill')\n            playerHpFill.setOrigin(0, 0.5)\n            playerHpFill.setScale(0.8, 1) // 80% HP\n\n            // Enemy HP bar\n            this.add.text(550, 50, 'Enemy Boltick', { fontSize: '18px', color: '#000' })\n            const enemyHpBg = this.add.image(450, 70, 'hp-bar-bg')\n            enemyHpBg.setOrigin(0, 0.5)\n            const enemyHpFill = this.add.image(450, 70, 'hp-bar-fill')\n            enemyHpFill.setOrigin(0, 0.5)\n            enemyHpFill.setScale(0.6, 1) // 60% HP\n\n            // Battle UI\n            const uiPanel = this.add.rectangle(400, 500, 780, 180, 0xffffff)\n            uiPanel.setStrokeStyle(2, 0x000000)\n\n            // Move buttons\n            const moves = ['Fire Blast', 'Peck', 'Wing Attack', 'Roost']\n            moves.forEach((move, index) => {\n              const x = 150 + (index % 2) * 200\n              const y = 450 + Math.floor(index / 2) * 50\n              \n              const button = this.add.rectangle(x, y, 180, 40, 0xe74c3c)\n              button.setStrokeStyle(2, 0x000000)\n              button.setInteractive()\n              \n              this.add.text(x, y, move, { \n                fontSize: '14px', \n                color: '#fff' \n              }).setOrigin(0.5)\n\n              button.on('pointerdown', () => {\n                console.log(`Used ${move}!`)\n                // Add battle logic here\n              })\n\n              button.on('pointerover', () => {\n                button.setFillStyle(0xc0392b)\n              })\n\n              button.on('pointerout', () => {\n                button.setFillStyle(0xe74c3c)\n              })\n            })\n\n            // Battle text\n            this.add.text(400, 520, 'Choose your move!', {\n              fontSize: '16px',\n              color: '#000'\n            }).setOrigin(0.5)\n\n            // Add some battle animations\n            this.tweens.add({\n              targets: playerRooster,\n              y: playerRooster.y - 10,\n              duration: 1000,\n              yoyo: true,\n              repeat: -1,\n              ease: 'Sine.easeInOut'\n            })\n\n            this.tweens.add({\n              targets: enemyRooster,\n              y: enemyRooster.y - 8,\n              duration: 1200,\n              yoyo: true,\n              repeat: -1,\n              ease: 'Sine.easeInOut'\n            })\n          },\n          update: function(this: Phaser.Scene) {\n            // Game loop - add battle logic here\n          }\n        },\n        physics: {\n          default: 'arcade',\n          arcade: {\n            gravity: { x: 0, y: 0 },\n            debug: false\n          }\n        }\n      }\n\n      // Initialize Phaser game\n      phaserGameRef.current = new Phaser.Game(config)\n    })\n\n    // Cleanup function\n    return () => {\n      if (phaserGameRef.current) {\n        phaserGameRef.current.destroy(true)\n        phaserGameRef.current = null\n      }\n    }\n  }, [])\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg p-4\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-bold\">Battle Arena</h2>\n          <button\n            onClick={() => {\n              if (phaserGameRef.current) {\n                phaserGameRef.current.destroy(true)\n                phaserGameRef.current = null\n              }\n            }}\n            className=\"text-gray-500 hover:text-gray-700 text-2xl\"\n          >\n            ×\n          </button>\n        </div>\n        <div ref={gameRef} className=\"border border-gray-300 rounded\" />\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2456, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useAccount, useConnect, useDisconnect } from 'wagmi'\nimport AccountCreation from '@/components/AccountCreation'\nimport RoosterSelection from '@/components/RoosterSelection'\nimport BattleFinder from '@/components/BattleFinder'\nimport Training from '@/components/Training'\nimport PhaserGame from '@/components/PhaserGameNew'\n\ntype GameState = 'welcome' | 'account-creation' | 'rooster-selection' | 'main-menu' | 'battle' | 'training'\n\nexport default function Home() {\n  const [gameState, setGameState] = useState<GameState>('welcome')\n  const [selectedRooster, setSelectedRooster] = useState<string | null>(null)\n  const { address, isConnected } = useAccount()\n  const { connect, connectors } = useConnect()\n  const { disconnect } = useDisconnect()\n\n  const handleRoosterSelection = (roosterType: string) => {\n    setSelectedRooster(roosterType)\n    setGameState('main-menu')\n  }\n\n  const renderCurrentState = () => {\n    switch (gameState) {\n      case 'welcome':\n        return (\n          <div className=\"min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 flex items-center justify-center p-4\">\n            <div className=\"max-w-md w-full bg-white rounded-lg shadow-xl p-8 text-center\">\n              <h1 className=\"text-4xl font-bold text-gray-800 mb-4\">Rooster Battle</h1>\n              <p className=\"text-gray-600 mb-8\">\n                Welcome to the ultimate rooster battling experience! Train your roosters, battle other players, and climb the ranks.\n              </p>\n              <button\n                onClick={() => setGameState('account-creation')}\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors\"\n              >\n                Start Your Journey\n              </button>\n            </div>\n          </div>\n        )\n\n      case 'account-creation':\n        return <AccountCreation onComplete={() => setGameState('rooster-selection')} />\n\n      case 'rooster-selection':\n        return <RoosterSelection onSelection={handleRoosterSelection} />\n\n      case 'main-menu':\n        return (\n          <div className=\"min-h-screen bg-gradient-to-br from-slate-900 to-slate-800 p-4\">\n            <div className=\"max-w-4xl mx-auto\">\n              <header className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n                <div className=\"flex justify-between items-center\">\n                  <div>\n                    <h1 className=\"text-3xl font-bold text-gray-800\">Rooster Battle Arena</h1>\n                    <p className=\"text-gray-600\">Your rooster: {selectedRooster}</p>\n                  </div>\n                  <div className=\"flex gap-4\">\n                    {!isConnected ? (\n                      <button\n                        onClick={() => connect({ connector: connectors[0] })}\n                        className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg\"\n                      >\n                        Connect Wallet\n                      </button>\n                    ) : (\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-sm text-gray-600\">\n                          {address?.slice(0, 6)}...{address?.slice(-4)}\n                        </span>\n                        <button\n                          onClick={() => disconnect()}\n                          className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg text-sm\"\n                        >\n                          Disconnect\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </header>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                <div className=\"bg-white rounded-lg shadow-lg p-6\">\n                  <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Battle Arena</h2>\n                  <p className=\"text-gray-600 mb-4\">Challenge other players to epic battles</p>\n                  <button\n                    onClick={() => setGameState('battle')}\n                    className=\"w-full bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-lg\"\n                  >\n                    Find Battle\n                  </button>\n                </div>\n\n                <div className=\"bg-white rounded-lg shadow-lg p-6\">\n                  <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Training Ground</h2>\n                  <p className=\"text-gray-600 mb-4\">Train your rooster to improve stats</p>\n                  <button\n                    onClick={() => setGameState('training')}\n                    className=\"w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-2 px-4 rounded-lg\"\n                  >\n                    Train Rooster\n                  </button>\n                </div>\n\n                <div className=\"bg-white rounded-lg shadow-lg p-6\">\n                  <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Wilderness</h2>\n                  <p className=\"text-gray-600 mb-4\">Explore and catch wild roosters</p>\n                  <button\n                    className=\"w-full bg-purple-600 hover:bg-purple-700 text-white font-semibold py-2 px-4 rounded-lg\"\n                    disabled\n                  >\n                    Coming Soon\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n\n      case 'battle':\n        return <BattleFinder onBack={() => setGameState('main-menu')} />\n\n      case 'training':\n        return <Training onBack={() => setGameState('main-menu')} />\n\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen\">\n      {renderCurrentState()}\n      {gameState === 'battle' && <PhaserGame />}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}